(* This file was generated by Ocsigen-start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

let%shared language_of_string s =
 let s = if String.length s > 2 then String.sub s 0 2 else s in
 match s with
 | "fr" -> %%%MODULE_NAME%%%_i18n.Fr
 | "en" -> %%%MODULE_NAME%%%_i18n.Us
 | _ -> raise Not_found

let%shared string_of_language = function
 | %%%MODULE_NAME%%%_i18n.Fr -> "fr-FR"
 | %%%MODULE_NAME%%%_i18n.Us -> "en-US"

let%server best_matched_language () =
  (* lang contains a list of (language_as_string, quality_value) *)
  let lang = Eliom_request_info.get_accept_language () in
  (* If no quality is given, we suppose it's 1 *)
  let lang = List.map (fun (s, quality_value) ->
    let quality_value = match quality_value with
    | None -> 1.
    | Some quality_value -> quality_value
    in
    (s, quality_value))
    lang
  in
  (* Increasingly sort based on the quality *)
  let lang = List.sort (fun (_, q1) (_, q2) -> compare q2 q1) lang in
  let lang = List.map (fun (language, _) -> language_of_string language) lang in
  (* The first language of the list is returned. If the list is empty, the
     default language is returned.
   *)
  Lwt.return
    (match lang with
     | [] -> (%%%MODULE_NAME%%%_i18n.default_language)
     | language :: _ -> language)

let%shared get_language () =
  %%%MODULE_NAME%%%_i18n.get_lang ()

let%shared set_language lang =
  %%%MODULE_NAME%%%_i18n.set_lang lang

let%server update_language lang =
  let language  = string_of_language lang in
  let myid_o    = Os_current_user.Opt.get_current_userid () in
  (* Update the server and client values *)
  %%%MODULE_NAME%%%_i18n.set_lang lang;
  ignore [%client (%%%MODULE_NAME%%%_i18n.set_lang ~%lang : unit)];
  (* Update in the database if a user is connected *)
  match myid_o with
  | None -> Lwt.return ()
  | Some userid -> Os_user.update_language ~userid ~language

let%server _ =
  Os_session.on_start_process
    (fun () ->
       (* Guess a default language. *)
       let%lwt lang = best_matched_language () in
       ignore (update_language lang);
       Lwt.return ());
  Os_session.on_start_connected_process
    (fun userid ->
      (* Set language according to user preferences. *)
      let%lwt lang = Os_user.get_language userid in
      let language = match lang with
      | Some language -> (language_of_string language)
      | None ->
        (ignore (Os_user.update_language
          ~userid
          ~language:(
            string_of_language %%%MODULE_NAME%%%_i18n.default_language)
                )
        );
        %%%MODULE_NAME%%%_i18n.default_language
      in
      set_language language;
      ignore ([%client (set_language ~%language : unit)]);
      Lwt.return ())

[%%shared
  module Language_i18n : Os_i18n.I18NSIG = struct
    let passwords_do_not_match =
      [%i18n S.passwords_do_not_match]

    let generate_action_link_key_subject_email =
      [%i18n S.generate_action_link_key_subject_email]

    let sign_up_email_msg =
      [%i18n S.sign_up_email_msg]

    let email_already_exists =
      [%i18n S.email_already_exists]

    let user_does_not_exist =
      [%i18n S.user_does_not_exist]

    let account_not_activated =
      [%i18n S.account_not_activated]

    let wrong_password =
      [%i18n S.wrong_password]

    let add_email_msg =
      [%i18n S.add_email_msg]

    let invalid_action_key =
      [%i18n S.invalid_action_key]

    let forgot_pwd_email_msg =
      [%i18n S.forgot_pwd_email_msg]

    let must_be_connected_to_see_page =
      [%i18n S.must_be_connected_to_see_page]

    let error =
      [%i18n S.error ~capitalize:true]

    let email_address =
      [%i18n S.email_address]

    let your_email =
      [%i18n S.your_email]

    let password =
      [%i18n S.password ~capitalize:true]

    let your_password =
      [%i18n S.your_password]

    let retype_password =
      [%i18n S.retype_password]

    let keep_me_logged_in =
      [%i18n S.keep_logged_in]

    let sign_in =
      [%i18n S.sign_in]

    let log_out =
      [%i18n S.logout]

    let your_first_name =
      [%i18n S.your_first_name]

    let your_last_name =
      [%i18n S.your_last_name]

    let submit =
      [%i18n S.submit ~capitalize:true]

    let see_help_again_from_beginning =
      [%i18n S.see_help_again_from_beginning]
  end
]

[%%shared
  module A = Os_i18n.Register (Language_i18n)
]
